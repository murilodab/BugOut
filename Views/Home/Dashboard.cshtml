@model BugOut.Models.ViewModels.DashBoardViewModel
@using Microsoft.AspNetCore.Identity
@using BugOut.Services.Interfaces
@using BugOut.Models.Enums

@inject UserManager<AppUser> UserManager
@inject IAppRolesService RolesService
@inject IAppProjectService ProjectService

@{
    ViewData["Title"] = "Dashboard";
    AppUser appUser = await UserManager.GetUserAsync(User);
}

<!-- Styles -->
<style>
    .amDark {
        background-color: #30303d;
        color: #fff;
    }

    #chartdiv {
        width: 100%;
        height: 500px;
    }

</style>


<div class="container-fluid px-4">
    <h1 class="text-center mt-3 mb-5">Dashboard</h1>
    
   

   

    <!-- Info Pills -->
    <div class="row row-cols-1 row-cols-sm-2 row-cols-md-4 g-4">
        <div class="col">
            <a asp-action="AllProjects" asp-controller="Projects" style="text-decoration:none">
                <div class="card text-center bg-info">
                    <div class="card-header text-light">
                        <span>Active Projects</span>
                    </div>
                    <div class="card-body">
                        <div class="p-15 text-light">
                            <h3>@Model.Projects.Where(p => p.StartDate < DateTime.Now && p.EndDate > DateTime.Now).Count()</h3>
                            
                        </div>
                    </div>
                </div>
            </a>
        </div>
        <div class="col">
            <a asp-action="UnassignedProjects" asp-controller="Projects" style="text-decoration:none">
                <div class="card text-center bg-dark">
                    <div class="card-header text-light">
                        <span>Unassigned Projects</span>
                    </div>
                    <div class="card-body">
                        <div class="p-15 text-light">

                            @{
                                int count = 0;
                                foreach (Project project in Model.Projects)
                                {
                                    if (await ProjectService.GetProjectManagerAsync(project.Id) == null)
                                    {
                                        count++;
                                    }
                                }
                            }

                            <h3>
                                @count
                            </h3>
                            
                        </div>
                    </div>
                </div>
            </a>
        </div>
        <div class="col">
            <a asp-action="AllTickets" asp-controller="Tickets" style="text-decoration:none">
                <div class="card text-center bg-secondary">
                    <div class="card-header text-light">
                        <span>Active Tickets</span>
                    </div>
                    <div class="card-body">
                        <div class="p-15 text-light">

                            <h3>@Model.Tickets.Where(t => t.Archived == false).Count()</h3>
                           
                        </div>
                    </div>
                </div>
            </a>
        </div>
        <div class="col">
            <a asp-action="UnassignedTickets" asp-controller="Tickets" style="text-decoration:none">
                <div class="card text-center bg-warning">
                    <div class="card-header text-light">
                        <span>Unassigned Tickets</span>
                    </div>
                    <div class="card-body">
                        <div class="p-15 text-light">
                            <h3>@Model.Tickets.Where(t => string.IsNullOrEmpty(t.DeveloperUserId)).Count()</h3>
                           
                        </div>
                    </div>
                </div>
            </a>
        </div>
    </div>

    <!-- Charts -->
    <div class="row row-cols-1 row-cols-md-2 mt-4 g-4 mb-4">
        @* chart 01 *@
        <div class="col">
            <div class="card mb-4">
                <div class="card-header">
                    <h5>Projects by Priority</h5>
                </div>
                <div class="card-body d-flex justify-content-center">
                    <div id="chart3D" class=""></div>
                </div>
            </div>
        </div>
        @* chart 02 *@
        <div class="col">
            <div class="card mb-4">
                <div class="card-header">
                    <h5>Project Tickets Count (%)</h5>
                </div>
                <div class="card-body d-flex justify-content-center">
                    <div id="donut"></div>
                </div>
            </div>
        </div>
    </div>
    <div class="row row-cols-1 row-cols-md-2 g-4">
        @* chart 3 *@
        <div class="col">
            <div class="card">
                <div class="card-header">
                    <h5>Tickets by Priority</h5>
                </div>
                <div class="card-body">
                    <canvas id="pieChart"></canvas>
                </div>
            </div>
        </div>
        @* chart 4 *@
        <div class="col">
            <div class="card">
                <div class="card-header">
                    <h5>Tickets by Status</h5>
                </div>
                <div class="card-body">
                    <canvas id="donutChart"></canvas>
                </div>
            </div>
        </div>
    </div>

    @*  chart 5 *@
    <div class="row mt-4">
        <div class="col">
            <div class="card" style="height:500px;width:auto;">
                <div class="card-header w-100">
                    <h5>Tickets vs Developers</h5>
                </div>
                <div class="card-body overflow-scroll" style="height:700px;">
                    <!-- HTML -->
                    <div id="chartdiv" style="width:750px;"></div>
                </div>
            </div>
        </div>
    </div>

    <div class="mt-5 ">
        <div class="row">

            <div class="col-12">

                <div class="card p-2">
                    <div class="card-header">
                        <h2>Projects</h2>
                    </div>
                    <div class="card-body">

                        @* <div class="table-responsive" style="overflow-y:auto;height:600px;"> *@
                        <table class="table table-hover" id="datatablesSimple">
                            <thead class="">
                                <tr>
                                    @* Table header *@
                                    <th>Name</th>
                                    <th>Start Date</th>
                                    <th>End Date</th>
                                    <th>Priority</th>
                                    <th>Action</th>
                                </tr>
                            </thead>

                            <tfoot class="">
                                <tr>
                                    @* Table footer *@
                                    <th>Name</th>
                                    <th>Start Date</th>
                                    <th>End Date</th>
                                    <th>Priority</th>
                                    <th>Action</th>
                                </tr>
                            </tfoot>

                            <tbody>

                                @foreach (var project in Model.Projects.OrderByDescending(d => d.EndDate))
                                {
                                    <tr>
                                        <td><a asp-action="Details" asp-controller="Projects" asp-route-id="@project.Id" style="color:black;"><strong>@project.Name</strong></a></td>
                                        <td><span style="font-size:small;">@project.StartDate.ToString("MM.dd.yyyy")</span></td>
                                        <td><span style="font-size:small;">@project.EndDate.ToString("MM.dd.yyyy")</span></td>
                                        <td><span class="badge bg-dark">@project.ProjectPriority?.Name</span></td>
                                        <td><a class="btn btn-sm btn-outline-secondary" asp-action="Details" asp-controller="Projects" asp-route-id="@project.Id"><i class="fs-5 bi-justify"></i></a></td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                        @* </div> *@
                    </div>
                </div>

            </div>

            <div class="col-12">

                <div class="card mt-5 p-2">
                    <div class="card-header">
                        <h2>Tickets</h2>
                    </div>
                    <div class="card-body">

                        @* <div class="table-responsive" style="overflow-y:auto;height:600px;"> *@
                        <table class="table table-hover" id="datatablesSimpleTickets">
                            <thead class="">
                                <tr>

                                    <th>Title</th>
                                    <th>Developer</th>
                                    <th>Status</th>
                                    <th>Priority</th>
                                    <th>Date</th>
                                    <th>Action</th>
                                </tr>
                            </thead>

                            <tfoot class="">
                                <tr>

                                    <th>Title</th>
                                    <th>Developer</th>
                                    <th>Status</th>
                                    <th>Priority</th>
                                    <th>Date</th>
                                    <th>Action</th>
                                </tr>
                            </tfoot>
                            <tbody>

                                @foreach (var ticket in Model.Tickets.OrderByDescending(d => d.Created))
                                {
                                    <tr>
                                        <td><a asp-action="Details" asp-controller="Tickets" asp-route-id="@ticket.Id" style="color:black"><strong>@ticket.Title</strong></a> </td>
                                        <td>
                                            @if (ticket.DeveloperUserId != null)
                                            {
                                                @ticket.DeveloperUser?.FullName
                                            }
                                            else
                                            {

                                                <span class="badge bg-warning text-dark">Unassigned</span>
                                            }
                                        </td>
                                        @if (ticket.TicketStatus.Name == "New")
                                        {
                                            <td><span class="badge bg-success rounded-pill">@ticket.TicketStatus.Name </span></td>

                                        }
                                        else
                                        {
                                            <td><span class="badge bg-primary rounded-pill">@ticket.TicketStatus.Name </span></td>
                                        }
                                        <td><span class="badge bg-dark">@ticket.TicketPriority.Name </span></td>
                                        <td><span style="font-size:small;">@ticket.Created.ToString("MM-dd-yyyy")</span></td>
                                        <td>
                                            <a class="btn btn-sm btn-outline-info-secondary" asp-action="Details" asp-controller="Tickets" asp-route-id="@ticket.Id"><i class="fs-5 bi-justify"></i></a>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                        @* </div> *@
                    </div>

                </div>

            </div>
            
        </div>
    </div>
</div>


@section scripts {

    <!--Google Charts-->
    <script type="text/javascript" src="https://www.google.com/jsapi"></script>

    <script type="text/javascript">
        google.load("visualization", "1", { packages: ["corechart"] });
        google.setOnLoadCallback(drawChart);
        function drawChart() {
            $.ajax({
                type: "POST",
                url: "/Home/GglProjectPriority",
                data: '{}',
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (result) {
                    var data = google.visualization.arrayToDataTable(result);

                    //3D Pie
                    var options = {
                        is3D: true,
                        chartArea: { left: 0, bottom: 15, width: '100%', height: '100%' },

                        legend: { position: 'bottom', alignment: 'center' },
                        width: 280,
                        height: 280

                    };

                    var chart = new google.visualization.PieChart($("#chart3D")[0]);
                    chart.draw(data, options);
                },
                failure: function (result) {
                    alert(result.d);
                },
                error: function (result) {
                    alert(result.d);
                }
            });
        }
    </script>
    <script type="text/javascript">
        google.load("visualization", "1", { packages: ["corechart"] });
        google.setOnLoadCallback(drawChart);
        function drawChart() {
            $.ajax({
                type: "POST",
                url: "/Home/GglProjectTickets",
                data: '{}',
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (result) {
                    var data = google.visualization.arrayToDataTable(result);

                    //Donut
                    var options = {
                        pieHole: 0.5,
                        chartArea: { left: 0, bottom: 15, width: '100%', height: '100%' },

                        legend: { position: 'bottom', alignment: 'center' },
                        width: 280,
                        height: 280
                    };
                    var chart = new google.visualization.PieChart($("#donut")[0]);
                    chart.draw(data, options);
                },
                failure: function (result) {
                    alert(result.d);
                },
                error: function (result) {
                    alert(result.d);
                }
            });
        }
    </script>

    <!-- *** Begin Chart JS Pie *** -->
    <script src="https://cdn.jsdelivr.net/npm/chart.js@4.4.1/dist/chart.umd.min.js"></script>
    <script>

        var pieChartCanvas = $('#pieChart').get(0).getContext('2d');
        var pieData = {
            labels: [
                '@nameof(AppTicketPriority.Medium)',
                '@nameof(AppTicketPriority.High)',
                '@nameof(AppTicketPriority.Urgent)',
                '@nameof(AppTicketPriority.Low)'
            ],
            datasets: [
                {
                    data: [
        @Model.Tickets.Where(t => t.TicketPriority.Name == nameof(AppTicketPriority.Medium) && t.Archived == false).Count(),
        @Model.Tickets.Where(t => t.TicketPriority.Name == nameof(AppTicketPriority.High) && t.Archived == false).Count(),
        @Model.Tickets.Where(t => t.TicketPriority.Name == nameof(AppTicketPriority.Urgent) && t.Archived == false).Count(),
        @Model.Tickets.Where(t => t.TicketPriority.Name == nameof(AppTicketPriority.Low) && t.Archived == false).Count()
                                                                                                                                                                                                ],
                    backgroundColor: [
                        'rgba(255, 99, 132, 0.2)',
                        'rgba(54, 162, 235, 0.2)',
                        'rgba(255, 206, 86, 0.2)',
                        'rgba(75, 192, 192, 0.2)'
                    ],
                    borderColor: [
                        'rgba(255, 99, 132, 1)',
                        'rgba(54, 162, 235, 1)',
                        'rgba(255, 206, 86, 1)',
                        'rgba(75, 192, 192, 1)'
                    ]
                }
            ]
        };

        var pieOptions = {
            maintainAspectRatio: false,
            responsive: true,
            radius: '100%'
        };
        //Create pie or douhnut chart
        // You can switch between pie and douhnut using the method below.
        new Chart(pieChartCanvas, {
            type: 'pie',
            data: pieData,
            options: pieOptions
        });
    </script>
    <!-- *** End Chart JS Pie *** -->
    <!-- *** Begin Chart JS Donut *** -->
    <script src="https://cdn.jsdelivr.net/npm/chart.js@4.4.1/dist/chart.umd.min.js"></script>
    <script>

        var donutChartCanvas = $('#donutChart').get(0).getContext('2d');
        var donutData = {
            labels: [
                '@nameof(AppTicketStatus.Development)',
                '@nameof(AppTicketStatus.New)',
                '@nameof(AppTicketStatus.Resolved)',
                '@nameof(AppTicketStatus.Testing)'
            ],
            datasets: [
                {
                    data: [
        @Model.Tickets.Where(t => t.TicketStatus.Name == nameof(AppTicketStatus.Development) && t.Archived == false).Count(),
        @Model.Tickets.Where(t => t.TicketStatus.Name == nameof(AppTicketStatus.New) && t.Archived == false).Count(),
        @Model.Tickets.Where(t => t.TicketStatus.Name == nameof(AppTicketStatus.Resolved) && t.Archived == false).Count(),
        @Model.Tickets.Where(t => t.TicketStatus.Name == nameof(AppTicketStatus.Testing) && t.Archived == false).Count()
                                                                                                                                                                                        ],
                    backgroundColor: [
                        'rgba(255, 99, 132, 0.2)',
                        'rgba(54, 162, 235, 0.2)',
                        'rgba(255, 206, 86, 0.2)',
                        'rgba(75, 192, 192, 0.2)'
                    ],
                    borderColor: [
                        'rgba(255, 99, 132, 1)',
                        'rgba(54, 162, 235, 1)',
                        'rgba(255, 206, 86, 1)',
                        'rgba(75, 192, 192, 1)'
                    ]
                }
            ]
        };

        var donutOptions = {
            maintainAspectRatio: false,
            responsive: true,
            radius: '100%'
        };
        //Create pie or douhnut chart
        // You can switch between pie and douhnut using the method below.
        new Chart(donutChartCanvas, {
            type: 'doughnut',
            data: donutData,
            options: donutOptions
        });
    </script>
    <!-- *** End Chart JS Donut *** -->
    <!-- *** Begin AM Charts *** -->
    <!-- Resources -->
    <script src="https://cdn.amcharts.com/lib/4/core.js"></script>
    <script src="https://cdn.amcharts.com/lib/4/charts.js"></script>

    <!-- Chart code -->

    <script>
        $.ajax({
            type: "POST",
            url: "/Home/AmCharts",
            data: '{}',
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (result) {
                am4core.ready(function () {

                    // Themes begin
                    // Themes end

                    // Create chart instance
                    var chart = am4core.create("chartdiv", am4charts.XYChart);



                    // Add data
                    chart.data = result;

                    chart.paddingLeft = 0;

                    // Create axes
                    var categoryAxis = chart.yAxes.push(new am4charts.CategoryAxis());
                    categoryAxis.dataFields.category = "project";
                    categoryAxis.numberFormatter.numberFormat = "#";
                    categoryAxis.renderer.inversed = true;
                    categoryAxis.renderer.grid.template.location = 0;
                    categoryAxis.renderer.cellStartLocation = 0.1;
                    categoryAxis.renderer.cellEndLocation = 0.9;

                    var valueAxis = chart.xAxes.push(new am4charts.ValueAxis());
                    valueAxis.renderer.opposite = true;



                    // Create series
                    function createSeries(field, name) {
                        var series = chart.series.push(new am4charts.ColumnSeries());
                        series.dataFields.valueX = field;
                        series.dataFields.categoryY = "project";
                        series.name = name;
                        series.columns.template.tooltipText = "{name}: [bold]{valueX}[/]";
                        series.columns.template.height = am4core.percent(100);
                        series.sequencedInterpolation = true;


                        var valueLabel = series.bullets.push(new am4charts.LabelBullet());
                        valueLabel.label.text = "{valueX}";
                        valueLabel.label.horizontalCenter = "left";
                        valueLabel.label.dx = 10;
                        valueLabel.label.hideOversized = true;
                        valueLabel.label.truncate = true;

                        var categoryLabel = series.bullets.push(new am4charts.LabelBullet());
                        categoryLabel.label.text = "{name}";
                        categoryLabel.label.horizontalCenter = "right";
                        categoryLabel.label.dx = -10;
                        categoryLabel.label.fill = am4core.color("#fff");
                        categoryLabel.label.hideOversized = false;
                        categoryLabel.label.truncate = false;
                    }

                    createSeries("tickets", "Tickets");
                    createSeries("developers", "Devs");

                }); // end am4core.ready()


            },
            failure: function (result) {
                alert(result.d);
            },
            error: function (result) {
                alert(result.d);
            }
        });
    </script>

    <!-- *** End AM Charts *** -->
    <!-- Data Tables-->

    <script src="https://cdn.jsdelivr.net/npm/simple-datatables@7.1.2/dist/umd/simple-datatables.min.js" crossorigin="anonymous"></script>
    <script src="/js/datatables-simple-demo.js"></script>
}